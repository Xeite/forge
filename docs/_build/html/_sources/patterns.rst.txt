Patterns
========

Forge enables some new, interesting software development patterns. Some of those patterns are documented below.

.. _hidden-

.. chameleon-begin

Chameleon func
--------------

.. code-block:: python

    import forge

    @forge.sign(
        *forge.args('remove'),
        **forge.kwargs,
    )
    def chameleon(*remove, **kwargs):
        forge.resign(
            *forge.args('remove'),
            **{
                k: forge.kwarg(default=v) for k, v in kwargs.items()
                if k not in remove
            },
            **forge.kwargs,
        )(chameleon)
        return kwargs

    def test_chameleon():
        assert chameleon() == {}
        assert chameleon(a=1) == dict(a=1)
        assert chameleon() == dict(a=1)
        assert chameleon('a') == dict(a=1)
        assert chameleon() == {}

.. chameleon-end